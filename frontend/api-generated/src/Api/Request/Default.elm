{-
   Mensam API
   This is an API for hot desk booking.

   The version of the OpenAPI document: 

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Default exposing
    ( deskCreatePut
    , deskListGet
    , loginPost
    , openapiGet
    , profileGet
    , registerPost
    , reservationCancelPost
    , reservationCreatePut
    , spaceCreatePut
    , spaceJoinPost
    , spaceListGet
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| Create a new desk. This desk will belong to the given space. You have to be an administrator for that space to create desks. 
-}
deskCreatePut : Maybe Api.Data.RequestDeskCreate -> String -> Api.Request Api.Data.ResponseDeskCreate
deskCreatePut requestDeskCreate_body auth_token =
    Api.request
        "PUT"
        "/desk/create"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestDeskCreate requestDeskCreate_body)
        Api.Data.responseDeskCreateDecoder
        |> Api.withBearerToken auth_token



{-| List desks. 
-}
deskListGet : Maybe Api.Data.RequestDeskList -> String -> Api.Request Api.Data.ResponseDeskList
deskListGet requestDeskList_body auth_token =
    Api.request
        "GET"
        "/desk/list"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestDeskList requestDeskList_body)
        Api.Data.responseDeskListDecoder
        |> Api.withBearerToken auth_token



{-| Login to your user account. 
-}
loginPost : String -> Api.Request Api.Data.ResponseLogin
loginPost auth_token =
    Api.request
        "POST"
        "/login"
        []
        []
        []
        Nothing
        Api.Data.responseLoginDecoder
        |> Api.withBearerToken auth_token



{-| This OpenAPI specification is automatically generated from a servant API. 
-}
openapiGet : Api.Request Api.Data.AnyType
openapiGet =
    Api.request
        "GET"
        "/openapi"
        []
        []
        []
        Nothing
        Api.Data.anyTypeDecoder



{-| Request information for a user profile. 
-}
profileGet : String -> Api.Request Api.Data.ResponseProfile
profileGet name_query =
    Api.request
        "GET"
        "/profile"
        []
        [ ( "name", Just <| identity name_query ) ]
        []
        Nothing
        Api.Data.responseProfileDecoder



{-| Register a new user account. 
-}
registerPost : Maybe Api.Data.RequestRegister -> Api.Request (List AnyType)
registerPost requestRegister_body =
    Api.request
        "POST"
        "/register"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestRegister requestRegister_body)
        (Json.Decode.list Api.Data.anyTypeDecoder)



{-| Cancel a desk reservation. 
-}
reservationCancelPost : Maybe Api.Data.RequestReservationCancel -> String -> Api.Request Api.Data.ResponseReservationCancel
reservationCancelPost requestReservationCancel_body auth_token =
    Api.request
        "POST"
        "/reservation/cancel"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestReservationCancel requestReservationCancel_body)
        Api.Data.responseReservationCancelDecoder
        |> Api.withBearerToken auth_token



{-| Request a desk reservation. A desk can only be reserved by one user at any time. 
-}
reservationCreatePut : Maybe Api.Data.RequestReservationCreate -> String -> Api.Request Api.Data.ResponseReservationCreate
reservationCreatePut requestReservationCreate_body auth_token =
    Api.request
        "PUT"
        "/reservation/create"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestReservationCreate requestReservationCreate_body)
        Api.Data.responseReservationCreateDecoder
        |> Api.withBearerToken auth_token



{-| Create a new space. You will be an administrator of this newly created space. 
-}
spaceCreatePut : Maybe Api.Data.RequestSpaceCreate -> String -> Api.Request Api.Data.ResponseSpaceCreate
spaceCreatePut requestSpaceCreate_body auth_token =
    Api.request
        "PUT"
        "/space/create"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestSpaceCreate requestSpaceCreate_body)
        Api.Data.responseSpaceCreateDecoder
        |> Api.withBearerToken auth_token



{-| Become a member of a space. 
-}
spaceJoinPost : Maybe Api.Data.RequestSpaceJoin -> String -> Api.Request Api.Data.ResponseSpaceJoin
spaceJoinPost requestSpaceJoin_body auth_token =
    Api.request
        "POST"
        "/space/join"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestSpaceJoin requestSpaceJoin_body)
        Api.Data.responseSpaceJoinDecoder
        |> Api.withBearerToken auth_token



{-| List visible spaces. 
-}
spaceListGet : Maybe Api.Data.RequestSpaceList -> String -> Api.Request Api.Data.ResponseSpaceList
spaceListGet requestSpaceList_body auth_token =
    Api.request
        "GET"
        "/space/list"
        []
        []
        []
        (Maybe.map Api.Data.encodeRequestSpaceList requestSpaceList_body)
        Api.Data.responseSpaceListDecoder
        |> Api.withBearerToken auth_token
